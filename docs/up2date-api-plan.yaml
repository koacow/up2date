openapi: 3.0.1
info:
  title: up2date-backend
  version: 1.0.0
  description: A fully customizable independent news application.
paths:
  /api/articles/topics:
    summary: Get all topics
    description: Retrieves all topics from the database.
    get:
      summary: Gets all topics
      description: >-
        Makes an API call to the News API to retrieve all topics.
      operationId: get_topics
      responses:
        200:
          description: Successfully retrieved topics
        400:
          description: Request failed
  /api/articles/:topic_id:
    summary: Get all articles from a certain topic.
    description: Retrieves a page of articles relating to the topic param.
    parameters:
      - in: path
        name: topic_id
        schema:
          type: integer
        required: true
        description: topic id 
    get:
      summary: Gets all articles belonging to a topic
      description: >-
        Makes an API call to the News API to retrieve all articles relating to
        the topic
      operationId: get_articles
      responses:
        200:
          description: Successfully retrieved articles
        400:
          description: Request failed'
  /api/articles/search:
    summary: Search for specific articles
    parameters:
      - in: query
        name: query
        schema:
          type: string
        required: true
        description: search query
      - in: query
        name: pageNum
        schema:
          type: integer
        required: false
        description: page number
        default: 1
    get:
      summary: Search for articles matching a query
      description: Search the News API for articles using the path-level query.
      operationId: search_articles
      responses:
        200:
          description: Successfully retrieved articles
        400:
          description: Request failed

  /api/users/register:
    summary: Create a new user
    description: Registration route.
    post:
      parameters:
        - in: body
          name: body
          description: User registration details
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
      summary: Creates a new user profile
      description: >-
        Creates a new user profile (name, email, password) and add
        the user to database. Sends a verification email to the user.
      operationId: create_user
      responses:
        200:
          description: Successfully created user
        400:
          description: Request failed
          
  /api/users/authenticate:
    summary: Sign in
    description: Sends user login details to supabase for authentication.
    parameters:
      - in: body
        name: body
        description: User login details (unencrypted)
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
    post:
      summary: Authenticates a user.
      description: Authenticates a user log in details and logs them in if correct.
      operationId: authenticate_user
      responses:
        400:
          description: Request failed
        200:
          description: Successfully authenticated user
  /api/users/reset-password:
    summary: Allows user to reset their password.
    description: Sends a password reset email to the user.
    parameters:
      - in: body
        name: body
        description: User email
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
    put:
      summary: Updates a user's password
      description: Updates the users password in the database
      operationId: reset_password
      responses:
        200:
          description: Reset password email sent
        400:
          description: Request failed
          
  /api/account/settings:
    summary: Route for a user's app settings
    get:
      summary: Retrieves a user's settings
      description: >-
        Retrieve an object representing all user's app settings.
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          required: true
          description: user id from session
      operationId: get_settings
      responses:
        200: 
          description: Successfully retrieved settings
        400:
          description: Request failed
          
    put:
      summary: Update a user's settings.
      description: Update the user's settings with a new settings object.
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          required: true
          description: user id from session
        - in: body
          name: body
          description: New user settings object
          required: true
          schema:
            type: object
            properties:
              setting1:
                type: boolean
              setting2:
                type: string
              setting3:
                type: string
      operationId: update_settigngs
      responses:
        200:
          description: Successfully updated settings
        400:
          description: Request failed
          
    delete:
      summary: Reset settings
      description: Delete all preferences and revert back to default settings.
      operationId: reset_preferences.
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          required: true
          description: user id from session
      responses:
        400:
          description: Request failed
        200:
          description: Successfully reset settings
          
  /api/account/topics:
    summary: Routes relating to a user's saved topics
    get:
      summary: Get the full list of a user's saved topics
      description: Retrieve a user's saved topics from the database.
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          required: true
          description: user id from session
      operationId: get_topics
      responses:
        400:
          description: Request failed
        200:
          description: Successfully retrieved topics
          
    put:
      summary: Update the list of user's saved topic.
      description: Replaces the list of a user's saved topic in the database with a new list.
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          required: true
          description: user id from session
        - in: body
          name: body
          description: New list of user's saved topics
          required: true
          schema:
            type: array
            items:
              type: string
      operationId: update_topics
      responses:
        200:
          description: Successfully updated topics
        400:
          description: Request failed
        
        
          
